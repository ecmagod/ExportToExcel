<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FangLab.Framework</name>
    </assembly>
    <members>
        <member name="T:FangLab.Framework.Algorithms.SlConsistentHash">
            <summary>
            一致性hash循环圈(目前用于横向分表)
            </summary>
        </member>
        <member name="M:FangLab.Framework.Algorithms.SlConsistentHash.MoveToNextNode(System.Int32,System.Int32,System.String,System.Int32@)">
            <summary>
            根据hashKey和节点数确认是否需要更换到新节点
            </summary>
            <param name="beforeNodeCount">之前的节点数</param>
            <param name="afterNodeCount">之后的节点数</param>
            <param name="hashKey">进行hash操作的key</param>
            <param name="nextServer">返回key命中的节点</param>
            <returns>是否需要移动到新节点</returns>
        </member>
        <member name="T:FangLab.Framework.Algorithms.ConsistentHash`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FangLab.Framework.Algorithms.ConsistentHash`1.Init(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="nodes"></param>
        </member>
        <member name="M:FangLab.Framework.Algorithms.ConsistentHash`1.Init(System.Collections.Generic.IEnumerable{`0},System.Int32)">
            <summary>
            
            </summary>
            <param name="nodes"></param>
            <param name="replicate"></param>
        </member>
        <member name="M:FangLab.Framework.Algorithms.ConsistentHash`1.Add(`0)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FangLab.Framework.Algorithms.ConsistentHash`1.Remove(`0)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FangLab.Framework.Algorithms.ConsistentHash`1.GetNode(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Algorithms.ConsistentHash`1.BetterHash(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:FangLab.Framework.Algorithms.Server">
            <summary>
            
            </summary>
        </member>
        <member name="M:FangLab.Framework.Algorithms.Server.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="_id"></param>
        </member>
        <member name="M:FangLab.Framework.Algorithms.Server.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:FangLab.Framework.Algorithms.Server.ID">
            <summary>
            
            </summary>
        </member>
        <member name="T:FangLab.Framework.Algorithms.MurmurHash2">
            <summary>
            
            </summary>
        </member>
        <member name="M:FangLab.Framework.Algorithms.MurmurHash2.Hash(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Algorithms.MurmurHash2.Hash(System.Byte[],System.UInt32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="seed"></param>
            <returns></returns>
        </member>
        <member name="T:FangLab.Framework.Apple.SlApn">
            <summary>
            苹果推送服务
            </summary>
        </member>
        <member name="M:FangLab.Framework.Apple.SlApn.Push(System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            发送
            </summary>
            <param name="hostname">服务器</param>
            <param name="port">端口</param>
            <param name="certificateFilePath">证书地址</param>
            <param name="certificatePassword">证书密码</param>
            <param name="token">设备编号</param>
            <param name="message">消息</param>
        </member>
        <member name="T:FangLab.Framework.Business.SlCityDefine">
            <summary>
            城市定义
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlCityDefine.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlCityDefine.GetID(System.String)">
            <summary>
            获得编号
            </summary>
            <param name="name">名称</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Business.SlCookieModelForCookieServer">
            <summary>
            Cookie模型
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlCookieModelForCookieServer.Key">
            <summary>
            主键
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlCookieModelForCookieServer.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlCookieModelForCookieServer.Expires">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="T:FangLab.Framework.Business.SlCookieServer">
            <summary>
            CookieServer操作
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlCookieServer.#ctor(System.Net.IPEndPoint)">
            <summary>
            初期化
            </summary>
            <param name="point">CookieServer服务器IP、端口号</param>
        </member>
        <member name="M:FangLab.Framework.Business.SlCookieServer.AddCookie(FangLab.Framework.Business.SlCookieModelForCookieServer[])">
            <summary>
            添加cookie
            </summary>
            <param name="cookielist"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Business.SlCookieServer.SetCookie(System.String,System.String,System.UInt32)">
            <summary>
            更新Cookie
            </summary>
            <param name="keyname">cookie名称</param>
            <param name="value">值</param>
            <param name="time">过期时间</param>
        </member>
        <member name="M:FangLab.Framework.Business.SlCookieServer.UpdateCookie(FangLab.Framework.Business.SlCookieModelForCookieServer[])">
            <summary>
            修改Cookie
            </summary>
            <param name="cookielist"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Business.SlCookieServer.QueryCookie">
            <summary>
            查询Cookie
            </summary>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Business.SlCookieServer.GetCookie(System.String)">
            <summary>
            获取Cookie的值
            </summary>
            <param name="keyname">key</param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Business.SlCookieServer.SessionIDExistis">
            <summary>
            判断Cookie是否存在
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlCookieServer.GetSessionID(System.String)">
            <summary>
            从Cookie Server获取Session ID
            </summary>
            <param name="domain">域名切换soufun/fang</param>
            <returns></returns>
        </member>
        <member name="P:FangLab.Framework.Business.SlCookieServer.IpEndPoint">
            <summary>
            CookieServer服务器IP、端口号
            </summary>
        </member>
        <member name="T:FangLab.Framework.Business.SlInterfaceType">
            <summary>
            接口类型
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlInterfaceType.Middle">
            <summary>
            中间机房接口
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlInterfaceType.North">
            <summary>
            北方机房接口
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlInterfaceType.South">
            <summary>
            南方机房接口
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlInterfaceType.ShangHai">
            <summary>
            上海机房接口
            </summary>
        </member>
        <member name="T:FangLab.Framework.Business.SlMobileAppCompanyDefine">
            <summary>
            渠道定义
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlMobileAppCompanyDefine.GetID(System.String)">
            <summary>
            获得编号
            </summary>
            <param name="name">名称</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Business.SlMobileAppOSDefine">
            <summary>
            移动的操作系统定义
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlMobileAppOSDefine.GetID(System.String)">
            <summary>
            获得编号
            </summary>
            <param name="name">名称</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Business.SlMobileAppPhoneTypeDefine">
            <summary>
            电话类型定义
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlMobileAppPhoneTypeDefine.GetID(System.String)">
            <summary>
            获得编号
            </summary>
            <param name="name">名称</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Business.SlMobileAppProductDefine">
            <summary>
            产品定义
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlMobileAppProductDefine.GetID(System.String)">
            <summary>
            获得编号
            </summary>
            <param name="name">名称</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Business.SlMobileAppVersionDefine">
            <summary>
            版本定义
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlMobileAppVersionDefine.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlMobileAppVersionDefine.GetID(System.String)">
            <summary>
            获得编号
            </summary>
            <param name="name">名称</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Business.SlOpenPageType">
            <summary>
            打开方式
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlOpenPageType.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlOpenPageType.Iframe">
            <summary>
            iframe
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlOpenPageType.FrameSet">
            <summary>
            框架页
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlOpenPageType.WindowOpen">
            <summary>
            window.open方式
            </summary>
        </member>
        <member name="T:FangLab.Framework.Business.SlPassportIdentity">
            <summary>
            通行证登录用户验证
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlPassportIdentity.NewPassportName">
            <summary>
            新版通行证Cookie名称
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlPassportIdentity.CompatiblePassportName">
            <summary>
            旧版需兼容通行证Cookie名称
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlPassportIdentity.GetUser(FangLab.Framework.Business.SlInterfaceType,System.String)">
            <summary>
            获取用户信息
            </summary>
            <param name="type">type 0：中间机房 1：北方机房 2：南方机房 3：上海机房</param>
            <param name="domain">域名切换soufun/fang</param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Business.SlPassportIdentity.IsAuthenticated(FangLab.Framework.Business.SlInterfaceType,System.String)">
            <summary>
            判断是否验证
            </summary>
            <param name="type">type 0：中间机房 1：北方机房 2：南方机房 3：上海机房</param>
            <param name="domain">域名切换soufun/fang</param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Business.SlPassportIdentity.Login(System.String,System.String,System.String,System.String,System.String,FangLab.Framework.Business.SlInterfaceType,System.Action,System.Action{System.String},System.String)">
            <summary>
            通行证登陆
            </summary>
            <param name="username">通行证用户名</param>
            <param name="password">通行证密码</param>
            <param name="service">服务名（通行证分配）</param>
            <param name="host">站点域名</param>
            <param name="vcode">验证码</param>
            <param name="type">接口类型</param>
            <param name="successAction">成功回调方法</param>
            <param name="errorAction">失败回调方法</param>
            <param name="domain">域名切换soufun/fang</param>
            <returns>是否登陆成功</returns>
        </member>
        <member name="M:FangLab.Framework.Business.SlPassportIdentity.SetOldCookies(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            记录通行证的所有cookis
            </summary>
            <param name="usertype">用户类型(1普通用户 2纯手机用户 3纯邮箱用户)</param>
            <param name="userid">普通用户保存用户ID，纯手机用户保存手机表ID，纯邮箱用户保存邮箱表ID</param>
            <param name="userCookieName">普通用户保存用户名，纯手机用户保存手机号，纯邮箱用户保存邮箱地址</param>
            <param name="password">普通用户保存用户密码，纯手机用户保存手机验证码，纯邮箱用户保存邮箱密码</param>
            <param name="isvalid">保存userid和isvalid字段的加密值...</param>
            <param name="validation">保存userid和userCookieName字段的加密值</param>
            <param name="domain">域名切换soufun/fang</param>
        </member>
        <member name="M:FangLab.Framework.Business.SlPassportIdentity.Logout(System.String)">
            <summary>
            退出
            </summary>
        </member>
        <member name="P:FangLab.Framework.Business.SlPassportIdentity.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:FangLab.Framework.Business.SlPassportIdentity.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:FangLab.Framework.Business.SlPassportIdentity.UserType">
            <summary>
            用户类型 (1:普通用户 2：纯手机用户)
            </summary>
        </member>
        <member name="P:FangLab.Framework.Business.SlPassportIdentity.IsValid">
            <summary>
            是否验证
            </summary>
        </member>
        <member name="P:FangLab.Framework.Business.SlPassportIdentity.Token">
            <summary>
            用户验证信息
            </summary>
        </member>
        <member name="T:FangLab.Framework.Business.SlRefererType">
            <summary>
            来源类型
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlRefererType.Input">
            <summary>
            直接输入
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlRefererType.Inner">
            <summary>
            站内引荐
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlRefererType.Outer">
            <summary>
            站外引荐
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlRefererType.Search">
            <summary>
            搜索引流
            </summary>
        </member>
        <member name="T:FangLab.Framework.Business.SlSearchDefine">
            <summary>
            搜索定义
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlSearchDefine.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchDefine.Settings">
            <summary>
            搜索定义
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchDefine.GroupType">
            <summary>
            搜索组类型
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchDefine.Domain">
            <summary>
            域名
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchDefine.KeyParameters">
            <summary>
            关键参数
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchDefine.Encoding">
            <summary>
            编码类型
            </summary>
        </member>
        <member name="M:FangLab.Framework.Business.SlSearchDefine.Equals(System.Object)">
            <summary>
            重写Equals
            </summary>
            <param name="obj">对象</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Business.SlSearchDefine.GetHashCode">
            <summary>
            重写GetHashCode
            </summary>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Business.SlSearchGroupType">
            <summary>
            搜索组类型
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Not">
            <summary>
            非搜索
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Baidu">
            <summary>
            百度
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Google">
            <summary>
            谷歌
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Sogou">
            <summary>
            搜狗
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Soso">
            <summary>
            搜搜
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Bing">
            <summary>
            必应
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Youdao">
            <summary>
            有道
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Yahoo">
            <summary>
            雅虎
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.So360">
            <summary>
            360
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Easou">
            <summary>
            宜搜
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Yicha">
            <summary>
            易查
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Roboo">
            <summary>
            儒豹
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlSearchGroupType.Sm">
            <summary>
            神马
            </summary>
        </member>
        <member name="T:FangLab.Framework.Business.SlUserType">
            <summary>
            用户类型
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlUserType.General">
            <summary>
            普通用户
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlUserType.Passport">
            <summary>
            通行证
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlUserType.Agent">
            <summary>
            搜房帮
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlUserType.Card">
            <summary>
            搜房卡
            </summary>
        </member>
        <member name="F:FangLab.Framework.Business.SlUserType.Soufun">
            <summary>
            内部员工
            </summary>
        </member>
        <member name="T:FangLab.Framework.CodeDom.SlCompiler">
            <summary>
            编译器
            </summary>
        </member>
        <member name="M:FangLab.Framework.CodeDom.SlCompiler.Compile(System.String,System.String[],System.String)">
            <summary>
            编译
            </summary>
            <param name="classCode">代码</param>
            <param name="referencedAssemblies">引用</param>
            <param name="compilerOptions">参数</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.CodeDom.SlCompiler.CompileToFile(System.String,System.String[],System.String,System.CodeDom.Compiler.TempFileCollection,System.String)">
            <summary>
            编译
            </summary>
            <param name="classCode">代码</param>
            <param name="referencedAssemblies">引用</param>
            <param name="outputAssembly">输出集</param>
            <param name="tempFileCollection">临时文件集合</param>
            <param name="compilerOptions">参数</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Collection.SlKeyValue`2">
            <summary>
            键值
            </summary>
            <typeparam name="TKey">键</typeparam>
            <typeparam name="TValue">值</typeparam>
        </member>
        <member name="F:FangLab.Framework.Collection.SlKeyValue`2.Key">
            <summary>
            键
            </summary>
        </member>
        <member name="F:FangLab.Framework.Collection.SlKeyValue`2.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="M:FangLab.Framework.Collection.SlKeyValue`2.Equals(System.Object)">
            <summary>
            重写Equals
            </summary>
            <param name="obj">对象</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Collection.SlKeyValue`2.GetHashCode">
            <summary>
            重写GetHashCode
            </summary>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Collection.SlNameValueCollection">
            <summary>
            NameValueCollection
            </summary>
        </member>
        <member name="M:FangLab.Framework.Collection.SlNameValueCollection.ToString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            转换为字符串
            </summary>
            <param name="nameValueCollection">对象</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Configuration.SlConfig">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:FangLab.Framework.Configuration.SlConfig.ParseVariable(System.String)">
            <summary>
            解析变量
            </summary>
            <param name="value">参数</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Configuration.SlConfig.ParseArray``1(System.String,System.Char,System.Boolean)">
            <summary>
            解析为数组
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="value">值</param>
            <param name="split">分割符</param>
            <param name="isDecode">是否解码</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Configuration.SlConfig.GetValue``1(System.String,System.Boolean)">
            <summary>
            获得值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">键</param>
            <param name="isDecode">是否解码</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Configuration.SlConfig.GetValues``1(System.String,System.Char,System.Boolean)">
            <summary>
            获得值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">键</param>
            <param name="split">分割符</param>
            <param name="isDecode">是否解码</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Configuration.SlConfig.Refresh">
            <summary>
            刷新配置
            </summary>
        </member>
        <member name="T:FangLab.Framework.Data.SlDatabase">
            <summary>
            数据库操作
            </summary>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabase.ExecuteNonQuery(System.String,System.String,System.Data.Common.DbParameter[],FangLab.Framework.Data.SlDatabaseType)">
            <summary>
            执行INSERT、UPDATE、DELETE以及不返回数据集的存储过程
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <param name="databaseType">数据库类型</param>
            <returns>影响的行数</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabase.ExecuteReader(System.String,System.String,System.Data.Common.DbParameter[],FangLab.Framework.Data.SlDatabaseType)">
            <summary>
            执行SELECT以及返回数据集的存储过程，返回读取器。读取器关闭时，连接会自动关闭。不建议在BS项目中使用，因为传统的DataSet方式要更容易控制缓存。
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <param name="databaseType">数据库类型</param>
            <returns>读取器</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabase.ExecuteScalar(System.String,System.String,System.Data.Common.DbParameter[],FangLab.Framework.Data.SlDatabaseType)">
            <summary>
            返回数据集的第一行第一列。数据库中为Null或空，都返回Null
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <param name="databaseType">数据库类型</param>
            <returns>数据集的第一行第一列</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabase.Fill(System.String,System.String,System.Data.DataSet,System.Data.Common.DbParameter[],FangLab.Framework.Data.SlDatabaseType)">
            <summary>
            填充数据集（数据集不是作为返回值，而是作为参数传入，这个决策主要是为了可以使用强类型的数据集。传入强类型的数据集也可以使用）
            </summary>
            <param name="dataSet">数据集（可以是强类型的数据集）</param>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL语句或存储过程名</param>
            <param name="parameters">参数数组</param>
            <param name="databaseType">数据库类型</param>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabase.Fill(System.String,System.String,System.Data.DataTable,System.Data.Common.DbParameter[],FangLab.Framework.Data.SlDatabaseType)">
            <summary>
            填充数据集
            </summary>
            <param name="dataTable">数据表（可以是强类型的数据表）</param>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL语句或存储过程名</param>
            <param name="parameters">参数数组</param>
            <param name="databaseType">数据库类型</param>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabase.GetDbProviderFactory(FangLab.Framework.Data.SlDatabaseType)">
            <summary>
            根据数据库类型获得某种数据库系列对象创建工厂
            </summary>
            <param name="databaseType">数据库类型</param>
            <returns>创建工厂</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabase.BulkCopy(System.String,System.Data.DataTable,System.String,System.Int32,System.Int32)">
            <summary>
            批量拷贝
            </summary>
            <param name="connectionString">数据库链接串</param>
            <param name="dataTable">数据源</param>
            <param name="destinationTableName">目标表名</param>
            <param name="batchSize">每批大小</param>
            <param name="notifyAfter">多少行发送通知</param>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabase.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabase.IsSafetySql(System.String)">
            <summary>
            是否安全
            </summary>
            <param name="input">输入</param>
            <returns>返回</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabase.GetSafetySql(System.String)">
            <summary>
            返回安全字符串
            </summary>
            <param name="input">输入</param>
            <returns>返回</returns>
        </member>
        <member name="T:FangLab.Framework.Data.SlDatabaseMySql">
            <summary>
            数据库操作
            </summary>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseMySql.ExecuteNonQuery(System.String,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行INSERT、UPDATE、DELETE以及不返回数据集的存储过程
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <returns>影响的行数</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseMySql.ExecuteReader(System.String,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SELECT以及返回数据集的存储过程，返回读取器。读取器关闭时，连接会自动关闭。不建议在BS项目中使用，因为传统的DataSet方式要更容易控制缓存。
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <returns>读取器</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseMySql.ExecuteScalar(System.String,System.String,System.Data.Common.DbParameter[])">
            <summary>
            返回数据集的第一行第一列。数据库中为Null或空，都返回Null
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <returns>数据集的第一行第一列</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseMySql.Fill(System.String,System.String,System.Data.DataSet,System.Data.Common.DbParameter[])">
            <summary>
            填充数据集（数据集不是作为返回值，而是作为参数传入，这个决策主要是为了可以使用强类型的数据集。传入强类型的数据集也可以使用）
            </summary>
            <param name="dataSet">数据集（可以是强类型的数据集）</param>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL语句或存储过程名</param>
            <param name="parameters">参数数组</param>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseMySql.Fill(System.String,System.String,System.Data.DataTable,System.Data.Common.DbParameter[])">
            <summary>
            填充数据集
            </summary>
            <param name="dataTable">数据表（可以是强类型的数据表）</param>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL语句或存储过程名</param>
            <param name="parameters">参数数组</param>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseMySql.GetDbProviderFactory">
            <summary>
            根据数据库类型获得某种数据库系列对象创建工厂
            </summary>
            <returns>创建工厂</returns>
        </member>
        <member name="T:FangLab.Framework.Data.SlDatabaseSqlCe">
            <summary>
            数据库操作
            </summary>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSqlCe.ExecuteNonQuery(System.String,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行INSERT、UPDATE、DELETE以及不返回数据集的存储过程
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <returns>影响的行数</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSqlCe.ExecuteReader(System.String,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SELECT以及返回数据集的存储过程，返回读取器。读取器关闭时，连接会自动关闭。不建议在BS项目中使用，因为传统的DataSet方式要更容易控制缓存。
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <returns>读取器</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSqlCe.ExecuteScalar(System.String,System.String,System.Data.Common.DbParameter[])">
            <summary>
            返回数据集的第一行第一列。数据库中为Null或空，都返回Null
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <returns>数据集的第一行第一列</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSqlCe.Fill(System.String,System.String,System.Data.DataSet,System.Data.Common.DbParameter[])">
            <summary>
            填充数据集（数据集不是作为返回值，而是作为参数传入，这个决策主要是为了可以使用强类型的数据集。传入强类型的数据集也可以使用）
            </summary>
            <param name="dataSet">数据集（可以是强类型的数据集）</param>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL语句或存储过程名</param>
            <param name="parameters">参数数组</param>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSqlCe.Fill(System.String,System.String,System.Data.DataTable,System.Data.Common.DbParameter[])">
            <summary>
            填充数据集
            </summary>
            <param name="dataTable">数据表（可以是强类型的数据表）</param>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL语句或存储过程名</param>
            <param name="parameters">参数数组</param>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSqlCe.GetDbProviderFactory">
            <summary>
            根据数据库类型获得某种数据库系列对象创建工厂
            </summary>
            <returns>创建工厂</returns>
        </member>
        <member name="T:FangLab.Framework.Data.SlDatabaseSQLite">
            <summary>
            数据库操作（只支持32位的SQLite）
            </summary>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSQLite.ExecuteNonQuery(System.String,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行INSERT、UPDATE、DELETE以及不返回数据集的存储过程
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <returns>影响的行数</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSQLite.ExecuteReader(System.String,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SELECT以及返回数据集的存储过程，返回读取器。读取器关闭时，连接会自动关闭。不建议在BS项目中使用，因为传统的DataSet方式要更容易控制缓存。
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <returns>读取器</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSQLite.ExecuteScalar(System.String,System.String,System.Data.Common.DbParameter[])">
            <summary>
            返回数据集的第一行第一列。数据库中为Null或空，都返回Null
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL命令或存储过程名</param>
            <param name="parameters">参数数组</param>
            <returns>数据集的第一行第一列</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSQLite.Fill(System.String,System.String,System.Data.DataSet,System.Data.Common.DbParameter[])">
            <summary>
            填充数据集（数据集不是作为返回值，而是作为参数传入，这个决策主要是为了可以使用强类型的数据集。传入强类型的数据集也可以使用）
            </summary>
            <param name="dataSet">数据集（可以是强类型的数据集）</param>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL语句或存储过程名</param>
            <param name="parameters">参数数组</param>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSQLite.Fill(System.String,System.String,System.Data.DataTable,System.Data.Common.DbParameter[])">
            <summary>
            填充数据集
            </summary>
            <param name="dataTable">数据表（可以是强类型的数据表）</param>
            <param name="connectionString">数据库连接字符串</param>
            <param name="sentence">SQL语句或存储过程名</param>
            <param name="parameters">参数数组</param>
        </member>
        <member name="M:FangLab.Framework.Data.SlDatabaseSQLite.GetDbProviderFactory">
            <summary>
            根据数据库类型获得某种数据库系列对象创建工厂
            </summary>
            <returns>创建工厂</returns>
        </member>
        <member name="T:FangLab.Framework.Data.SlDatabaseType">
            <summary>
            数据库类型枚举
            </summary>
        </member>
        <member name="F:FangLab.Framework.Data.SlDatabaseType.OleDb">
            <summary>
            OleDb数据库
            </summary>
        </member>
        <member name="F:FangLab.Framework.Data.SlDatabaseType.SqlServer">
            <summary>
            SqlServer数据库
            </summary>
        </member>
        <member name="F:FangLab.Framework.Data.SlDatabaseType.SQLite">
            <summary>
            SQLite数据库
            </summary>
        </member>
        <member name="F:FangLab.Framework.Data.SlDatabaseType.MySql">
            <summary>
            MySql数据库
            </summary>
        </member>
        <member name="T:FangLab.Framework.Data.SlDataSet">
            <summary>
            数据集
            </summary>
        </member>
        <member name="M:FangLab.Framework.Data.SlDataSet.FromXml(System.String)">
            <summary>
            通过Xml产生数据集
            </summary>
            <param name="xml">文档</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Data.SlDataSet.DownloadXml(System.String,System.Text.Encoding)">
            <summary>
            下载Xml产生数据集
            </summary>
            <param name="url">地址</param>
            <param name="encoding">编码</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Data.SlDbType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="F:FangLab.Framework.Data.SlDbType.StartDateTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="F:FangLab.Framework.Data.SlDbType.EndDateTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="F:FangLab.Framework.Data.SlDbType.StartDate">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="F:FangLab.Framework.Data.SlDbType.EndDate">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="M:FangLab.Framework.Data.SlDbType.IsLegalDateTime(System.DateTime)">
            <summary>
            是否合法的时间
            </summary>
            <param name="dateTime">时间</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Data.SlDbTypeMap">
            <summary>
            数据库类型映射
            </summary>
        </member>
        <member name="M:FangLab.Framework.Data.SlDbTypeMap.Map(System.String)">
            <summary>
            映射
            </summary>
            <param name="dbType">数据库类型</param>
            <returns>.NET类型</returns>
        </member>
        <member name="T:FangLab.Framework.Data.SlFieldDescription">
            <summary>
            字段描述
            </summary>
        </member>
        <member name="P:FangLab.Framework.Data.SlFieldDescription.Name">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:FangLab.Framework.Data.SlFieldDescription.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:FangLab.Framework.Data.SlFieldDescription.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="P:FangLab.Framework.Data.SlFieldDescription.IsNullable">
            <summary>
            是否可为Null
            </summary>
        </member>
        <member name="P:FangLab.Framework.Data.SlFieldDescription.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:FangLab.Framework.Diagnostics.SlAppContext">
            <summary>
            App上下文
            </summary>
        </member>
        <member name="F:FangLab.Framework.Diagnostics.SlAppContext.StartupTime">
            <summary>
            启动时间
            </summary>
        </member>
        <member name="F:FangLab.Framework.Diagnostics.SlAppContext.Directory">
            <summary>
            程序所在目录（有斜线结尾）
            </summary>
        </member>
        <member name="F:FangLab.Framework.Diagnostics.SlAppContext.Name">
            <summary>
            程序名称
            </summary>
        </member>
        <member name="F:FangLab.Framework.Diagnostics.SlAppContext.LogFilePath">
            <summary>
            程序集日志文件的路径
            </summary>
        </member>
        <member name="T:FangLab.Framework.Diagnostics.SlProcess">
            <summary>
            进程处理
            </summary>
        </member>
        <member name="M:FangLab.Framework.Diagnostics.SlProcess.ExecuteCommand(System.String)">
            <summary>
            执行命令行
            </summary>
            <param name="command">命令</param>
        </member>
        <member name="T:FangLab.Framework.Diagnostics.SlStopwatch">
            <summary>
            秒表
            </summary>
        </member>
        <member name="M:FangLab.Framework.Diagnostics.SlStopwatch.Execute(System.Action)">
            <summary>
            运行
            </summary>
            <param name="action">行为</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Diagnostics.SlTraceType">
            <summary>
            追踪类型
            </summary>
        </member>
        <member name="F:FangLab.Framework.Diagnostics.SlTraceType.Console">
            <summary>
            命令行
            </summary>
        </member>
        <member name="F:FangLab.Framework.Diagnostics.SlTraceType.Log">
            <summary>
            日志
            </summary>
        </member>
        <member name="T:FangLab.Framework.Drawing.SlImageMatcher">
            <summary>
            图片相似度比较
            </summary>
        </member>
        <member name="M:FangLab.Framework.Drawing.SlImageMatcher.GetImgHashCode(System.Drawing.Image,System.Int32,System.Int32)">
             <summary>  
             获取图片的Hashcode  
             </summary>  
             <param name="image">图像</param>  
             <param name="width">宽度</param>  
            <param name="height">高度</param>  
             <returns>64位图片指纹</returns>  
        </member>
        <member name="M:FangLab.Framework.Drawing.SlImageMatcher.GetThumbnailImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            图片压缩
            </summary>
            <param name="sourceImage">原图</param>
            <param name="smallWidth">压缩图宽度（px）</param>
            <param name="smallHeight">压缩图高度</param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Drawing.SlImageMatcher.GetSimilarity(System.String,System.String)">
            <summary>
            根据"汉明距离"（Hamming distance）计算相似度。  
            </summary>
            <param name="keyCode">字典中的哈希值</param>
            <param name="hashCode">待对比图片哈希值</param>
            <returns>相似度百分比</returns>
        </member>
        <member name="M:FangLab.Framework.Drawing.SlImageMatcher.RGBToGray(System.Int32)">
            <summary>  
            转为64级灰度  
            </summary>  
            <param name="pixels"></param>  
            <returns></returns>  
        </member>
        <member name="M:FangLab.Framework.Drawing.SlImageMatcher.Average(System.Int32[])">
            <summary>  
            计算平均值  
            </summary>  
            <param name="pixels"></param>  
            <returns></returns>  
        </member>
        <member name="M:FangLab.Framework.Drawing.SlImageMatcher.BinaryToHex(System.Int32)">
            <summary>
            转化为16进制
            </summary>
            <param name="binary"></param>
            <returns></returns>
        </member>
        <member name="T:FangLab.Framework.IO.SlDirectory">
            <summary>
            目录
            </summary>
        </member>
        <member name="M:FangLab.Framework.IO.SlDirectory.DeleteFiles(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="directory">目录</param>
        </member>
        <member name="T:FangLab.Framework.IO.SlFile">
            <summary>
            文件处理
            </summary>
        </member>
        <member name="M:FangLab.Framework.IO.SlFile.Write(System.String,System.String,System.Boolean,System.Text.Encoding,System.Boolean)">
            <summary>
            写入日志
            </summary>
            <param name="filePath">文件路径，文件不存在时会自动创建，存在时则追加信息</param>
            <param name="message">写入内容</param>
            <param name="isNewline">是否自动换行</param>
            <param name="append">是否在当前文本后附加,替换</param>
            <param name="encoding">编码方式</param>
        </member>
        <member name="M:FangLab.Framework.IO.SlFile.GetStreamReader(System.String,FangLab.Framework.IO.SlFileType,System.Text.Encoding)">
            <summary>
            获得读取流
            </summary>
            <param name="path">路径</param>
            <param name="fileType">文件类型</param>
            <param name="fileEncoding">文件编码</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.IO.SlFile.GetStreamWriter(System.String,FangLab.Framework.IO.SlFileType,System.Text.Encoding,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            获得输出流
            </summary>
            <param name="path">路径</param>
            <param name="fileType">文件类型</param>
            <param name="fileEncoding">文件编码</param>
            <param name="fileMode">文件模式</param>
            <param name="fileAccess">文件控制</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.IO.SlFile.BinaryWrite(System.Object,System.String,FangLab.Framework.IO.SlFileType,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            将对象转成二进制文件存储到对应的目录
            </summary>
            <param name="obj">对象</param>
            <param name="path">文件地址</param>
            <param name="fileType">文件类型</param>
            <param name="fileMode">打开文件方式</param>
            <param name="fileAccess">文件访问方式</param>
        </member>
        <member name="M:FangLab.Framework.IO.SlFile.BinaryRead``1(System.String,FangLab.Framework.IO.SlFileType,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            将二进制文件转成对象并返回
            </summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="path">文件地址</param>
            <param name="fileType">文件类型</param>
            <param name="fileMode">打开文件方式</param>
            <param name="fileAccess">文件访问方式</param>
            <returns>对象</returns>
        </member>
        <member name="T:FangLab.Framework.IO.SlFileIndex">
            <summary>
            文件索引
            </summary>
        </member>
        <member name="M:FangLab.Framework.IO.SlFileIndex.Write(System.String,System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            写
            </summary>
            <param name="directory">目录</param>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="fileName">文件名</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:FangLab.Framework.IO.SlFileIndex.Read(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            读
            </summary>
            <param name="directory">目录</param>
            <param name="key">键</param>
            <param name="fileName">文件名</param>
            <param name="encoding">编码</param>
            <returns>内容</returns>
        </member>
        <member name="M:FangLab.Framework.IO.SlFileIndex.Exists(System.String,System.String,System.String)">
            <summary>
            是否存在
            </summary>
            <param name="directory">目录</param>
            <param name="key">键</param>
            <param name="fileName">文件名</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.IO.SlFileIndex.Delete(System.String,System.String,System.String)">
            <summary>
            删除
            </summary>
            <param name="directory">目录</param>
            <param name="key">键</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:FangLab.Framework.IO.SlFileIndex.Clear(System.String)">
            <summary>
            清除
            </summary>
            <param name="directory">目录</param>
        </member>
        <member name="T:FangLab.Framework.IO.SlFileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="F:FangLab.Framework.IO.SlFileType.Text">
            <summary>
            文本文件
            </summary>
        </member>
        <member name="F:FangLab.Framework.IO.SlFileType.GZip">
            <summary>
            压缩文件
            </summary>
        </member>
        <member name="T:FangLab.Framework.IO.SlGZip">
            <summary>
            GZip
            </summary>
        </member>
        <member name="M:FangLab.Framework.IO.SlGZip.Compress(System.String)">
            <summary>
            压缩
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.IO.SlGZip.Decompress(System.String)">
            <summary>
            解压
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.IO.SlGZip.Compress(System.Byte[])">
            <summary>
            byte数组GZip压缩
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.IO.SlGZip.Decompress(System.Byte[])">
            <summary>
            byte数组GZip解压缩
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:FangLab.Framework.IO.SlLog">
            <summary>
            日志处理（因为日志操作一般均是对同一个文件的处理，因此实现为线程安全）
            </summary>
        </member>
        <member name="M:FangLab.Framework.IO.SlLog.Write(FangLab.Framework.Diagnostics.SlTraceType,System.String)">
            <summary>
            写日志
            </summary>
            <param name="traceType">跟踪类型</param>
            <param name="message">消息</param>
        </member>
        <member name="M:FangLab.Framework.IO.SlLog.NewLine(FangLab.Framework.Diagnostics.SlTraceType)">
            <summary>
            新行
            </summary>
            <param name="traceType">跟踪类型</param>
        </member>
        <member name="M:FangLab.Framework.IO.SlLog.Track(FangLab.Framework.Diagnostics.SlTraceType,System.Action,System.String,System.String)">
            <summary>
            追踪
            </summary>
            <param name="traceType">跟踪类型</param>
            <param name="action">动作</param>
            <param name="title">标题</param>
            <param name="divide">分割线</param>
        </member>
        <member name="M:FangLab.Framework.IO.SlLog.Track(FangLab.Framework.Diagnostics.SlTraceType,System.String,System.String,System.String,System.String,System.TimeSpan)">
            <summary>
            追踪
            </summary>
            <param name="traceType">跟踪类型</param>
            <param name="title">标题</param>
            <param name="divide">分割线</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="time">耗时</param>
        </member>
        <member name="T:FangLab.Framework.Net.SlHttpCache">
            <summary>
            .net缓存策略
            </summary>
        </member>
        <member name="T:FangLab.Framework.Net.ICache">
            <summary>
            缓存接口
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.ICache.Get(System.String)">
            <summary>
            获取值
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:FangLab.Framework.Net.ICache.Get``1(System.String)">
             <summary>
             获取值
             </summary>
             <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:FangLab.Framework.Net.ICache.Add(System.String,System.Object)">
            <summary>
            添加指定Key的对象
            </summary>
            <param name="key">键</param>
            <param name="obj">值</param>
        </member>
        <member name="M:FangLab.Framework.Net.ICache.Add(System.String,System.Object,System.DateTime)">
            <summary>
            添加指定Key的对象
            </summary>
            <param name="key">键</param>
            <param name="obj">值</param>
            <param name="TimeOut">到期时间</param>
        </member>
        <member name="M:FangLab.Framework.Net.ICache.Set(System.String,System.Object)">
            <summary>
            更新指定Key的对象
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.ICache.Set(System.String,System.Object,System.DateTime)">
            <summary>
            更新指定Key的对象
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="TimeOut">到期时间</param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.ICache.Delete(System.String)">
            <summary>
            移除指定key的对象
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:FangLab.Framework.Net.SlHttpCache.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.SlHttpCache.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlHttpCache.Get``1(System.String)">
            <summary>
            获取缓存（泛型）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlHttpCache.Add(System.String,System.Object)">
            <summary>
            加入缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlHttpCache.Add(System.String,System.Object,System.DateTime)">
            <summary>
            加入缓存并设置时间
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlHttpCache.Set(System.String,System.Object,System.DateTime)">
            <summary>
            重新添加缓存（清除缓存）
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlHttpCache.Set(System.String,System.Object)">
            <summary>
            重新添加缓存（清除缓存）
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlHttpCache.Delete(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:FangLab.Framework.Net.SlHttpCache.Current">
            <summary>
            
            </summary>
        </member>
        <member name="T:FangLab.Framework.Net.SlMemCached">
            <summary>
            MemCache缓存策略
            </summary>
        </member>
        <member name="F:FangLab.Framework.Net.SlMemCached.memcachedClient">
            <summary>
            缓存客户端对象
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.#ctor(FangLab.Framework.Net.SlMemcachedClient)">
            <summary>
            构造方法
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.KeyExists(System.String)">
            <summary>
            判断主键是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.Get(System.String)">
            <summary>
            获取memcached缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.Get``1(System.String)">
            <summary>
            获取memcached缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.Add(System.String,System.Object)">
            <summary>
            添加memcached缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.Add(System.String,System.Object,System.DateTime)">
            <summary>
            添加memcached缓存并设置超时时间
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.Set(System.String,System.Object)">
            <summary>
            添加memcached缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.Set(System.String,System.Object,System.DateTime)">
            <summary>
            添加memcached缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="validateTime"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.Set(System.String,System.Object,System.Int32)">
            <summary>
            添加memcached缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.GetMultiple(System.String[])">
            <summary>
            获取多个memcached缓存
            </summary>
            <param name="keys"></param>
            <returns>Hashtable</returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.Delete(System.String)">
            <summary>
            删除memcached缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemCached.GetStats">
            <summary>
            memcached状态查询
            </summary>
            <returns></returns>
        </member>
        <member name="T:FangLab.Framework.Net.SlIPAddress">
            <summary>
            IPAddress
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.SlIPAddress.ToNumber(System.String)">
            <summary>
            IP转换为数字
            </summary>
            <param name="ip">IP地址</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlIPAddress.ToIP(System.Int64)">
            <summary>
            数字转换为IP
            </summary>
            <param name="ipValue">ipValue</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Net.SlIPRegion">
            <summary>
            IP区域
            </summary>
        </member>
        <member name="F:FangLab.Framework.Net.SlIPRegion.All">
            <summary>
            所有
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.SlIPRegion.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.SlIPRegion.FindID(System.Int64)">
            <summary>
            同过IP的数字找到一个包含该IP数字的区间
            </summary>
            <param name="ipNumber">IP数字</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlIPRegion.Find(System.Int64)">
            <summary>
            同过IP的数字找到一个包含该IP数字的区间
            </summary>
            <param name="ipNumber">IP数字</param>
            <returns>结果</returns>
        </member>
        <member name="P:FangLab.Framework.Net.SlIPRegion.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlIPRegion.StartValue">
            <summary>
            开始值
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlIPRegion.EndValue">
            <summary>
            结束值
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlIPRegion.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlIPRegion.Province">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlIPRegion.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlIPRegion.StartIP">
            <summary>
            开始IP
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlIPRegion.EndIP">
            <summary>
            结束IP
            </summary>
        </member>
        <member name="T:FangLab.Framework.Net.SlMail">
            <summary>
            邮件发送
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.SlMail.Send(System.Boolean,System.String,System.String,System.String,System.String[],System.String[],System.String[])">
            <summary>
            发送邮件
            </summary>
            <param name="isBodyHtml">标题</param>
            <param name="subject">标题</param>
            <param name="body">内容</param>
            <param name="from">发送者</param>
            <param name="to">接收者</param>
            <param name="cc">抄送者</param>
            <param name="bcc">秘送者</param>
        </member>
        <member name="M:FangLab.Framework.Net.SlMail.SendWithAccessories(System.Boolean,System.String,System.String,System.String[],System.String,System.String[],System.String[],System.String[])">
            <summary>
            发送邮件
            </summary>
            <param name="isBodyHtml">标题</param>
            <param name="subject">标题</param>
            <param name="body">内容</param>
            <param name="attachFile">附件</param>
            <param name="from">发送者</param>
            <param name="to">接收者</param>
            <param name="cc">抄送者</param>
            <param name="bcc">秘送者</param>
        </member>
        <member name="T:FangLab.Framework.Net.SlMemcachedClient">
            <summary>
            Memcached操作
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.SlMemcachedClient.#ctor(System.String,System.String[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Memcached初期化
            </summary>
            <param name="pName">池名称</param>
            <param name="memServer">IP、端口号</param>
            <param name="InitConnections"></param>
            <param name="MinConnections"></param>
            <param name="MaxConnections"></param>
            <param name="SocketConnectTimeout"></param>
            <param name="SocketTimeout"></param>
        </member>
        <member name="P:FangLab.Framework.Net.SlMemcachedClient.CacheClient">
            <summary>
            客户端缓存操作对象
            </summary>
        </member>
        <member name="T:FangLab.Framework.Net.SlMobilePhoneRegion">
            <summary>
            通过手机号取归属地信息
            </summary>
        </member>
        <member name="F:FangLab.Framework.Net.SlMobilePhoneRegion.All">
            <summary>
            所有
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.SlMobilePhoneRegion.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.SlMobilePhoneRegion.Find(System.String)">
            <summary>
            通过手机号取归属地信息
            </summary>
            <param name="mobilePhone">手机号</param>
            <returns>结果</returns>
        </member>
        <member name="P:FangLab.Framework.Net.SlMobilePhoneRegion.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlMobilePhoneRegion.MobileNumber">
            <summary>
            手机号前缀
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlMobilePhoneRegion.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlMobilePhoneRegion.Province">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlMobilePhoneRegion.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlMobilePhoneRegion.MobileType">
            <summary>
            运营商
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlMobilePhoneRegion.AreaCode">
            <summary>
            区号
            </summary>
        </member>
        <member name="P:FangLab.Framework.Net.SlMobilePhoneRegion.PostCode">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="T:FangLab.Framework.Net.SlSocket">
            <summary>
            Socket
            </summary>
        </member>
        <member name="M:FangLab.Framework.Net.SlSocket.Send(System.String,System.Int32,System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            发送信息
            </summary>
            <param name="ip">端点IP</param>
            <param name="port">端点Port</param>
            <param name="message">消息</param>
            <param name="flgReceive">是否接受消息</param>
            <param name="encoding">数据编码方式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlSocket.Send(System.Net.IPEndPoint,System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            发送信息
            </summary>
            <param name="ipEndPoint">端点</param>
            <param name="message">消息</param>
            <param name="flgReceive">是否接受消息</param>
            <param name="encoding">数据编码方式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlSocket.Listen(System.Net.IPEndPoint,System.Func{System.String,System.Net.Sockets.Socket,System.String})">
            <summary>
            监听
            </summary>
            <param name="ipEndPoint">端点</param>
            <param name="func">动作</param>
        </member>
        <member name="M:FangLab.Framework.Net.SlSocket.GetRemoteEndPointIP(System.Net.Sockets.Socket)">
            <summary>
            获得远程IP
            </summary>
            <param name="socket">套接字</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Net.SlSocket.GetRemoteEndPointPort(System.Net.Sockets.Socket)">
            <summary>
            获得远程端口
            </summary>
            <param name="socket">套接字</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPool`2">
            <summary>
            自动失效基于并行字典的对象池（支持并发，不需要锁操作）
            </summary>
            <typeparam name="TKey">键</typeparam>
            <typeparam name="TValue">值</typeparam>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPool`2.#ctor(System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="overTimeInterval">失效间隔，单位为秒（多长时间之前的数据失效，0代表永不自动失效）</param>
            <param name="clearInterval">清理时间间隔（建议不太频繁）</param>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPool`2.Add(`0,`1)">
            <summary>
            增加一项
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPool`2.Contains(`0)">
            <summary>
            判断存在与否
            </summary>
            <param name="key">键</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPool`2.GetItems">
            <summary>
            获得列表
            </summary>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPool`2.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPool`2.Remove(`0)">
            <summary>
            删除一项
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPool`2.OverTimeClear(System.DateTime)">
            <summary>
            失效清理（将某个时间戳之前的数据全部删除）
            </summary>
            <param name="timestamp">时间戳</param>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPool`2.Dispose">
            <summary>
            清理
            </summary>
        </member>
        <member name="T:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPoolValue">
            <summary>
            自动失效基于并行字典的对象池的值基类（必须继承此基类，才能正常清理）
            </summary>
        </member>
        <member name="P:FangLab.Framework.ObjectPool.SlAutoOverTimeConcurrentDictionaryObjectPoolValue.Timestamp">
            <summary>
            对象时间戳
            </summary>
        </member>
        <member name="T:FangLab.Framework.ObjectPool.SlAutoOverTimeFileConcurrentDictionaryObjectPool`2">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeFileConcurrentDictionaryObjectPool`2.#ctor(System.Double,System.Double,System.String,FangLab.Framework.IO.SlFileType)">
            <summary>
            构造函数
            </summary>
            <param name="overTimeInterval">失效间隔，单位为秒（多长时间之前的数据失效，0代表永不自动失效）</param>
            <param name="clearInterval">清理时间间隔（建议不太频繁）</param>
            <param name="filePath">文件地址</param>
            <param name="fileType">文件类型</param>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeFileConcurrentDictionaryObjectPool`2.Add(`0,`1)">
            <summary>
            增加一项
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeFileConcurrentDictionaryObjectPool`2.Contains(`0)">
            <summary>
            判断存在与否
            </summary>
            <param name="key">键</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeFileConcurrentDictionaryObjectPool`2.GetItems">
            <summary>
            获得列表
            </summary>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeFileConcurrentDictionaryObjectPool`2.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeFileConcurrentDictionaryObjectPool`2.Remove(`0)">
            <summary>
            删除一项
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeFileConcurrentDictionaryObjectPool`2.OverTimeClear(System.DateTime)">
            <summary>
            失效清理（将某个时间戳之前的数据全部删除）
            </summary>
            <param name="timestamp">时间戳</param>
        </member>
        <member name="M:FangLab.Framework.ObjectPool.SlAutoOverTimeFileConcurrentDictionaryObjectPool`2.Dispose">
            <summary>
            清理
            </summary>
        </member>
        <member name="T:FangLab.Framework.Office.SlCsv">
            <summary>
            Csv文件处理
            </summary>
        </member>
        <member name="M:FangLab.Framework.Office.SlCsv.ToCsv(System.Collections.Generic.List{System.Object})">
            <summary>
            转换为Csv
            </summary>
            <param name="rows">列表</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Office.SlCsv.ToCsv(System.Data.DataTable)">
            <summary>
            转换为Csv
            </summary>
            <param name="rows">列表</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Security.SlAes">
            <summary>
            AES安全类
            </summary>
        </member>
        <member name="M:FangLab.Framework.Security.SlAes.Encrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            AES加密算法
            </summary>
            <param name="plainText">明文字符串</param>
            <param name="key">密钥</param>
            <param name="endcoding">编码格式</param>
            <returns>将加密后的密文转换为Base64编码，以便显示</returns>
        </member>
        <member name="M:FangLab.Framework.Security.SlAes.Decrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            AES解密
            </summary>
            <param name="cipherText">密文字符串</param>
            <param name="key">密钥</param>
            <param name="encoding">编码格式</param>
            <returns>返回解密后的明文字符串</returns>
        </member>
        <member name="T:FangLab.Framework.Security.SlDes">
            <summary>
            DES安全
            </summary>
        </member>
        <member name="M:FangLab.Framework.Security.SlDes.Encrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            加密方法
            </summary>
            <param name="input">待加密的字符串</param>
            <param name="password">加密的密码（只能为8位长）</param>
            <param name="encoding">编码方式</param>
            <returns>加密之后的文本</returns>
        </member>
        <member name="M:FangLab.Framework.Security.SlDes.EncryptForPassport(System.String,System.String,System.Text.Encoding)">
            <summary>
            通行证加密方法
            </summary>
            <param name="input">待加密的字符串</param>
            <param name="password">加密的密码（只能为8位长）</param>
            <param name="encoding">编码方式</param>
            <returns>加密之后的文本（Passpord返回16进制编码后的加密串）</returns>
        </member>
        <member name="M:FangLab.Framework.Security.SlDes.Decrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            解密方法
            </summary>
            <param name="input">待解密的字符串</param>
            <param name="password">加密时用的密码（只能为8位长）</param>
            <param name="encoding">编码方式</param>
            <returns>解密之后的文本</returns>
        </member>
        <member name="M:FangLab.Framework.Security.SlDes.DecryptForPassport(System.String,System.String,System.Text.Encoding)">
            <summary>
            password加密
            </summary>
            <param name="input"></param>
            <param name="password"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="T:FangLab.Framework.Security.SlMd5">
            <summary>
            MD5安全
            </summary>
        </member>
        <member name="M:FangLab.Framework.Security.SlMd5.HashPassword(System.String)">
            <summary>
            哈希值
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.SlArray">
            <summary>
            数组
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlArray.GetPossibly(System.Int32,System.Int32)">
            <summary>
            获得可能
            </summary>
            <param name="length">长度</param>
            <param name="n">几个为true</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.SlCompare">
            <summary>
            比较
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlCompare.Equal(System.String,System.String)">
            <summary>
            Equal
            </summary>
            <param name="field">字段</param>
            <param name="pattern">模式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotEqual(System.String,System.String)">
            <summary>
            NotEqual
            </summary>
            <param name="field">字段</param>
            <param name="pattern">模式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.Contains(System.String,System.String)">
            <summary>
            Contains
            </summary>
            <param name="field">字段</param>
            <param name="pattern">模式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotContains(System.String,System.String)">
            <summary>
            NotContains
            </summary>
            <param name="field">字段</param>
            <param name="pattern">模式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.StartsWith(System.String,System.String)">
            <summary>
            StartsWith
            </summary>
            <param name="field">字段</param>
            <param name="pattern">模式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotStartsWith(System.String,System.String)">
            <summary>
            NotStartsWith
            </summary>
            <param name="field">字段</param>
            <param name="pattern">模式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.EndsWith(System.String,System.String)">
            <summary>
            EndsWith
            </summary>
            <param name="field">字段</param>
            <param name="pattern">模式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotEndsWith(System.String,System.String)">
            <summary>
            NotEndsWith
            </summary>
            <param name="field">字段</param>
            <param name="pattern">模式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.RegexMatch(System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            RegexMatch
            </summary>
            <param name="field">字段</param>
            <param name="regex">正则表达式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotRegexMatch(System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            NotRegexMatch
            </summary>
            <param name="field">字段</param>
            <param name="regex">正则表达式</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.InScope(System.String,System.String,System.String)">
            <summary>
            判断一个值是否在一个值范围内
            </summary>
            <param name="field">字段</param>
            <param name="start">开始</param>
            <param name="end">结束</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotInScope(System.String,System.String,System.String)">
            <summary>
            判断一个值是否不在一个值范围内
            </summary>
            <param name="field">字段</param>
            <param name="start">开始</param>
            <param name="end">结束</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.InScope(System.Int32,System.Int32,System.Int32)">
            <summary>
            判断一个值是否在一个值范围内
            </summary>
            <param name="field">字段</param>
            <param name="start">开始</param>
            <param name="end">结束</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotInScope(System.Int32,System.Int32,System.Int32)">
            <summary>
            判断一个值是否不在一个值范围内
            </summary>
            <param name="field">字段</param>
            <param name="start">开始</param>
            <param name="end">结束</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.InScope(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            判断一个值是否在一个值范围内（有一个在其范围内即为真）
            </summary>
            <param name="fields">字段</param>
            <param name="start">开始</param>
            <param name="end">结束</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.InScope(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            判断一个值是否在一个值范围内
            </summary>
            <param name="field">字段</param>
            <param name="fields">字段</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotInScope(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            判断一个值是否在一个值范围内
            </summary>
            <param name="field">字段</param>
            <param name="fields">字段</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.InScope(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            判断一个值是否在一个值范围内
            </summary>
            <param name="field">字段</param>
            <param name="fields">字段</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotInScope(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            判断一个值是否在一个值范围内
            </summary>
            <param name="field">字段</param>
            <param name="fields">字段</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotInScope(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            判断一个值是否不在一个值范围内（有一个在其范围内即为真）
            </summary>
            <param name="fields">字段</param>
            <param name="start">开始</param>
            <param name="end">结束</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.InScope(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32)">
            <summary>
            判断一个值是否在一个值范围内
            </summary>
            <param name="fields">字段</param>
            <param name="start">开始</param>
            <param name="end">结束</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotInScope(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32)">
            <summary>
            判断一个值是否不在一个值范围内
            </summary>
            <param name="fields">字段</param>
            <param name="start">开始</param>
            <param name="end">结束</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.Intersect(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            判断两个数组是否有交集
            </summary>
            <param name="array1">数组1</param>
            <param name="array2">数组2</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotIntersect(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            判断两个数组是否无交集
            </summary>
            <param name="array1">数组1</param>
            <param name="array2">数组2</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.Intersect(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            判断两个数组是否有交集
            </summary>
            <param name="array1">数组1</param>
            <param name="array2">数组2</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlCompare.NotIntersect(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            判断两个数组是否无交集
            </summary>
            <param name="array1">数组1</param>
            <param name="array2">数组2</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.SlContainer`2">
            <summary>
            容器
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlContainer`2.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlContainer`2.Add(`0,`1)">
            <summary>
            增加键值对
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:FangLab.Framework.SlContainer`2.ContainsKey(`0)">
            <summary>
            是否包含
            </summary>
            <param name="key">键</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlContainer`2.Clear">
            <summary>
            清空容器
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlContainer`2.Remove(`0)">
            <summary>
            删除
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:FangLab.Framework.SlContainer`2.Get(`0)">
            <summary>
            获取
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:FangLab.Framework.SlContainer`2.Set(`0,`1)">
            <summary>
            设置
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="T:FangLab.Framework.SlDivideLine">
            <summary>
            分割线
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlDivideLine.FourSize">
            <summary>
            4号
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlDivideLine.ThreeSize">
            <summary>
            3号
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlDivideLine.TwoSize">
            <summary>
            2号
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlDivideLine.OneSize">
            <summary>
            1号
            </summary>
        </member>
        <member name="T:FangLab.Framework.SlAction">
            <summary>
            行为
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlAction.Try(System.Action,System.Int32,System.Int32)">
            <summary>
            尝试
            </summary>
            <param name="action">行为</param>
            <param name="maxTryCount">最大尝试次数</param>
            <param name="interval">间隔（毫秒）</param>
        </member>
        <member name="T:FangLab.Framework.SlCalendar">
            <summary>
            日历
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlCalendar.GetItem(System.DateTime)">
            <summary>
            获得一项
            </summary>
            <param name="dateTime">日期</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.SlCalendarItem">
            <summary>
            日历项
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlCalendarItem.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlCalendarItem.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlCalendarItem.YearMonth">
            <summary>
            年月
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlCalendarItem.YearMonthDay">
            <summary>
            年月日
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlCalendarItem.KpiYearWeek">
            <summary>
            Kpi年周
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlCalendarItem.KpiYearWeekDay">
            <summary>
            Kpi年周日
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlCalendarItem.YearWeek">
            <summary>
            年周
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlCalendarItem.YearWeekDay">
            <summary>
            年周日
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlCalendarItem.YearQuarter">
            <summary>
            年季
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlCalendarItem.YearQuarterDay">
            <summary>
            年季日
            </summary>
        </member>
        <member name="T:FangLab.Framework.SlConvert">
            <summary>
            转换类
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlConvert.ParseArray``1(System.String,System.Char)">
            <summary>
            解析为数组
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="value">值</param>
            <param name="split">分割符</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToInt32(System.Object,System.Int32)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为Int32类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToInt16(System.Object,System.Int16)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为Int16类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToInt64(System.Object,System.Int64)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为Int64类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToDecimal(System.Object,System.Decimal)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 Decimal 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToDouble(System.Object,System.Double)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 Double 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToString(System.Object,System.String)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 String 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToChar(System.Object,System.Char)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 Char 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToDateTime(System.Object,System.DateTime)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 DateTime类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToBool(System.Object,System.Boolean)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 Boolean 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToByte(System.Object,System.Byte)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 Byte 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToSByte(System.Object,System.SByte)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 SByte 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToSingle(System.Object,System.Single)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 Single 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToUInt32(System.Object,System.UInt32)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 UInt32 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToUInt16(System.Object,System.UInt16)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 UInt16 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.TryToUInt64(System.Object,System.UInt64)">
            <summary>
            尝试转换（失败则返回默认值）-- 转换为 UInt64 类型
            </summary>
            <param name="input">输入</param>
            <param name="defaultValue">默认值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlConvert.ToTitleCase(System.String)">
            <summary>
            首字母大写
            </summary>
            <param name="input">输入</param>
            <returns></returns>
        </member>
        <member name="T:FangLab.Framework.SlDateTime">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlDateTime.FormatString">
            <summary>
            格式化字符串
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlDateTime.DateFormatString">
            <summary>
            日期格式化字符串
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlDateTime.GetMonthInterval(System.DateTime,System.DateTime)">
            <summary>
            获得月间隔
            </summary>
            <param name="start">开始时间</param>
            <param name="end">结束时间</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlDateTime.ParseConfig(System.String,System.Char,System.Char)">
            <summary>
            解析配置
            </summary>
            <param name="value">值</param>
            <param name="regioneSplit">区域分割线</param>
            <param name="partSplit">部分分割线</param>
            <returns>结果</returns>
        </member>
        <member name="F:FangLab.Framework.SlDateTime.JavaScriptMinTime">
            <summary>
            JavaScript最小时间
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlDateTime.UtcMinTime">
            <summary>
             UTC最小时间
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlDateTime.NowTime">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlDateTime.Now">
            <summary>
            当前日期时间
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlDateTime.NowDate">
            <summary>
            当前日期
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlDateTime.NowYear">
            <summary>
            当前年
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlDateTime.NowMonth">
            <summary>
            当前月
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlDateTime.NowDay">
            <summary>
            当前天
            </summary>
        </member>
        <member name="T:FangLab.Framework.SlException">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlException.ToXml(System.Exception)">
            <summary>
            转换为Xml
            </summary>
            <param name="exception">异常</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlException.ToJson(System.Exception)">
            <summary>
            转换为Dynamic
            </summary>
            <param name="exception">异常</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlException.ToString(System.Exception)">
            <summary>
            转换为字符串
            </summary>
            <param name="exception">异常</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.SlGuid">
            <summary>
            Guid处理类
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlGuid.NewGuid">
            <summary>
            产生Guid
            </summary>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.SlMath">
            <summary>
            数学
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlMath.Eval(System.String)">
            <summary>
            计算表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.SlMoney">
            <summary>
            金额处理
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlMoney.ConvertYearRateToMonthRate(System.Decimal)">
            <summary>
            年利率转换为月利率
            </summary>
            <param name="yearRate">年利率</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlMoney.MatchingTheRepaymentOfPrincipalAndInterest(System.Decimal,System.Decimal,System.Int32)">
            <summary>
            等额本息还款法
            </summary>
            <param name="yearRate">年利率</param>
            <param name="principal">本金</param>
            <param name="month">还款月数</param>
            <returns>每月还款情况</returns>
        </member>
        <member name="M:FangLab.Framework.SlMoney.TotalByMatchingTheRepaymentOfPrincipalAndInterest(System.Decimal,System.Decimal,System.Int32)">
            <summary>
            等额本息还款法（每月还款额）
            </summary>
            <param name="yearRate">年利率</param>
            <param name="principal">本金</param>
            <param name="month">还款月数</param>
            <returns>每月还款额</returns>
        </member>
        <member name="M:FangLab.Framework.SlMoney.PrincipalByMatchingTheRepaymentOfPrincipalAndInterest(System.Decimal,System.Decimal,System.Int32,System.Int32)">
            <summary>
            等额本息还款法（每月还款额中本金部分）
            </summary>
            <param name="yearRate">年利率</param>
            <param name="principal">本金</param>
            <param name="month">还款月数</param>
            <param name="currentMonth">当前月份</param>
            <returns>每月还款额中本金部分</returns>
        </member>
        <member name="M:FangLab.Framework.SlMoney.MatchingTheRepaymentOfMonthInterestAndEndPrincipal(System.Decimal,System.Decimal,System.Int32)">
            <summary>
            按月付息到期还本法
            </summary>
            <param name="yearRate">年利率</param>
            <param name="principal">本金</param>
            <param name="month">还款月数</param>
            <returns>每月还款情况</returns>
        </member>
        <member name="T:FangLab.Framework.SlMoney.SlMatchingTheRepaymentItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlMoney.SlMatchingTheRepaymentItem.Month">
            <summary>
            月份
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlMoney.SlMatchingTheRepaymentItem.Total">
            <summary>
            总金额
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlMoney.SlMatchingTheRepaymentItem.Principal">
            <summary>
            本金
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlMoney.SlMatchingTheRepaymentItem.Interest">
            <summary>
            利息
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlMoney.SlMatchingTheRepaymentItem.PrincipalBalance">
            <summary>
            本金余额
            </summary>
        </member>
        <member name="T:FangLab.Framework.SlObject">
            <summary>
            对象
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlObject.NullObject">
            <summary>
            Null对象
            </summary>
        </member>
        <member name="T:FangLab.Framework.SlPinyin">
            <summary>
            汉字转拼音
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlPinyin.GetPinyin(System.String)">
            <summary> 
            汉字转化为拼音
            </summary> 
            <param name="str">汉字</param> 
            <returns>全拼</returns> 
        </member>
        <member name="M:FangLab.Framework.SlPinyin.GetFirstPinyin(System.String)">
            <summary> 
            汉字转化为拼音首字母
            </summary> 
            <param name="str">汉字</param> 
            <returns>首字母</returns> 
        </member>
        <member name="T:FangLab.Framework.SlResource">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlResource.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlResource.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlResource.IP">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
        <member name="P:FangLab.Framework.SlResource.MobilePhone">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
        <member name="T:FangLab.Framework.SlRunState">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlRunState.Develope">
            <summary>
            开发
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlRunState.Publish">
            <summary>
            发布
            </summary>
        </member>
        <member name="T:FangLab.Framework.SlStj">
            <summary>
            安全传输Json（Security Transport Json，专门用于数据在不同的系统之间传递，同时提供Java、JavaScript、PHP、C#语言版本）
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlStj.ToCryptograph(System.String)">
            <summary>
            明文转换为密文（不区分大小写）
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlStj.ToText(System.String)">
            <summary>
            密文转换为明文（不区分大小写）
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.SlSms">
            <summary>
            发送短信报警
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlSms.smsUrl">
            <summary>
            短信接口地址
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlSms.Send(System.String,System.String,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="phone">手机号码</param>
            <param name="message">发送消息（自动截断为70个字符进行分段发送，message支持自动空格转换为下划线）</param>
            <param name="domain">域名切换使用soufun/fang</param>
        </member>
        <member name="M:FangLab.Framework.SlSms.Send(System.String[],System.String,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="phones">手机号码组</param>
            <param name="message">发送消息（自动截断为70个字符进行分段发送，message支持自动空格转换为下划线）</param>
            <param name="domain">域名切换使用soufun/fang</param>
        </member>
        <member name="T:FangLab.Framework.SlSso">
            <summary>
            单点登录
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlSso.Login(System.String,System.String,System.String,System.String,System.Action{System.String},System.Action{System.String})">
            <summary>
            用户登录
            </summary>
            <param name="ssoApiUrl">SsoApiUrl</param>
            <param name="ssoServiceID">SsoServiceID</param>
            <param name="email">邮箱</param>
            <param name="password">密码</param>
            <param name="successAction">成功</param>
            <param name="errorAction">失败</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlSso.AutoLogin(System.String,System.String,System.Action{System.String},System.Action{System.String})">
            <summary>
            用户自动登录
            </summary>
            <param name="ssoApiUrl">SsoApiUrl</param>
            <param name="ssoServiceID">SsoServiceID</param>
            <param name="successAction">成功</param>
            <param name="errorAction">失败</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlSso.Active(System.String,System.String,System.String,System.Action{System.String},System.Action{System.String})">
            <summary>
            用户激活
            </summary>
            <param name="ssoApiUrl">SsoApiUrl</param>
            <param name="ssoServiceID">SsoServiceID</param>
            <param name="email">邮箱</param>
            <param name="successAction">成功</param>
            <param name="errorAction">失败</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlSso.DeActive(System.String,System.String,System.String,System.Action{System.String},System.Action{System.String})">
            <summary>
            用户取消激活
            </summary>
            <param name="ssoApiUrl">SsoApiUrl</param>
            <param name="ssoServiceID">SsoServiceID</param>
            <param name="email">邮箱</param>
            <param name="successAction">成功</param>
            <param name="errorAction">失败</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.SlStandardMessage">
            <summary>
            标准消息
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlStandardMessage.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlStandardMessage.Error">
            <summary>
            失败
            </summary>
        </member>
        <member name="T:FangLab.Framework.SlString">
            <summary>
            字符串
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlString.Left(System.String,System.Int32,System.String)">
            <summary>
            截取左半部分
            </summary>
            <param name="input">输入</param>
            <param name="length">长度</param>
            <param name="ex">扩展字符</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlString.GetHashCodeFor32(System.String)">
            <summary>
            获取哈希值（32位）
            </summary>
            <param name="input">输入项</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlString.GetHashCodeFor64(System.String)">
            <summary>
            获取哈希值（64位）
            </summary>
            <param name="input">输入项</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlString.IsNullOrEmptyAll(System.String[])">
            <summary>
            是否全为空（只要有一个不为空，则返回false）
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlString.IsNullOrEmptyAny(System.String[])">
            <summary>
            是否有一个为空（只要有一个为空，则返回true）
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlString.IsNullOrWhiteSpaceAll(System.String[])">
            <summary>
            是否全为空（只要有一个不为空，则返回false）
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlString.IsNullOrWhiteSpaceAny(System.String[])">
            <summary>
            是否有一个为空（只要有一个为空，则返回true）
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.SlSyncObject">
            <summary>
            同步对象
            </summary>
        </member>
        <member name="F:FangLab.Framework.SlSyncObject.IO_SlLog_Lock">
            <summary>
            管理器锁
            </summary>
        </member>
        <member name="T:FangLab.Framework.SlThrowableMessage">
            <summary>
            可抛出消息
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlThrowableMessage.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="T:FangLab.Framework.SlToken">
            <summary>
            多用于服务端的接口调用验证
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlToken.GetToken">
            <summary>
            获取token
            </summary>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.SlToken.IsVerifyToken(System.String,System.Int32)">
            <summary>
            校验token
            </summary>
            <param name="token">要校验的token</param>
            <param name="timeout">失效期限（秒）</param>
            <returns></returns>
        </member>
        <member name="T:FangLab.Framework.SlValidation">
            <summary>
            验证
            </summary>
        </member>
        <member name="M:FangLab.Framework.SlValidation.IsDecimal(System.String)">
            <summary>
            是否是数字
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlValidation.IsInt32(System.String)">
            <summary>
            是否为Inte32类型
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlValidation.IsInt16(System.String)">
            <summary>
            是否为Inte16类型
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlValidation.IsInt64(System.String)">
            <summary>
            是否为Inte64类型
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlValidation.IsDouble(System.String)">
            <summary>
            是否为Double类型
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlValidation.IsChar(System.String)">
            <summary>
            是否为char类型
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlValidation.IsDateTime(System.String)">
            <summary>
            是否为DateTime类型
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlValidation.IsSingle(System.String)">
            <summary>
            是否为Single类型
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlValidation.IsEmail(System.String)">
            <summary>
            是否是数字
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.SlValidation.IsMobile(System.String)">
            <summary>
            是否是数字
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Svn.SlSvnManager">
            <summary>
            SVN每日统计
            </summary>
        </member>
        <member name="F:FangLab.Framework.Svn.SlSvnManager.svnLogFullPath">
            <summary>
            本地路径,用于存放从svn取得的日志
            </summary>
        </member>
        <member name="F:FangLab.Framework.Svn.SlSvnManager.isDisposed">
            <summary>
            是否释放资源
            </summary>
        </member>
        <member name="F:FangLab.Framework.Svn.SlSvnManager.p">
            <summary>
            进程定义
            </summary>
        </member>
        <member name="F:FangLab.Framework.Svn.SlSvnManager.list">
            <summary>
            文件列表List对象
            </summary>
        </member>
        <member name="F:FangLab.Framework.Svn.SlSvnManager.changes">
            <summary>
            当天变更
            </summary>
        </member>
        <member name="F:FangLab.Framework.Svn.SlSvnManager.locks">
            <summary>
            当天锁定
            </summary>
        </member>
        <member name="M:FangLab.Framework.Svn.SlSvnManager.CallCmd(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            递归获取文件列表
            </summary>
            <param name="path"></param>
            <param name="userName"></param>
            <param name="passWord"></param>
            <param name="subPath"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:FangLab.Framework.Svn.SlSvnManager.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
            <param name="isDispose">是否释放</param>
        </member>
        <member name="M:FangLab.Framework.Svn.SlSvnManager.Close">
            <summary>
            关闭，关闭之后将无法再访问
            </summary>
        </member>
        <member name="M:FangLab.Framework.Svn.SlSvnManager.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="T:FangLab.Framework.Text.KeywordMatch.ISlMatchNode">
            <summary>
            匹配节点
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.AddChar(System.Char)">
            <summary>
            增加字符
            </summary>
            <param name="c">字符</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.ResetPosition">
            <summary>
            重置位置
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.SetPosition(System.Int32)">
            <summary>
            设置位置
            </summary>
            <param name="position">位置</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.SetKeyword(System.String)">
            <summary>
            设置待匹配的关键字到列表
            </summary>
            <param name="keyword">关键字</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.MoveToNextPosition">
            <summary>
            移动到下一个位置
            </summary>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.HasChild(System.Char)">
            <summary>
            判断是否有子节点
            </summary>
            <param name="c">字符</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.GetChild(System.Char)">
            <summary>
            获取子节点
            </summary>
            <param name="c">字符</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.MatchFailOver(FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode)">
            <summary>
            找到失效点
            </summary>
            <param name="rootNode">根</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.SetFailover(System.Int32,FangLab.Framework.Text.KeywordMatch.SlFailOverNode)">
            <summary>
            设置失效点
            </summary>
            <param name="offset">偏移量</param>
            <param name="failOverNode">失效点</param>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.CurrentFailover">
            <summary>
            当前失效点
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.ParentFailover">
            <summary>
            父级失效点
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.ISlMatchNode.CurrentKeyword">
            <summary>
            当前的关键字
            </summary>
        </member>
        <member name="T:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode">
            <summary>
            抽象匹配节点
            </summary>
        </member>
        <member name="F:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.matchKeywords">
            <summary>
            匹配关键字
            </summary>
        </member>
        <member name="F:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.failovers">
            <summary>
            失效点
            </summary>
        </member>
        <member name="F:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.children">
            <summary>
            子节点
            </summary>
        </member>
        <member name="F:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.currentPosition">
            <summary>
            当前位置
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.MoveToNextPosition">
            <summary>
            移动到下一个位置
            </summary>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.ResetPosition">
            <summary>
            重置位置
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.SetPosition(System.Int32)">
            <summary>
            设置位置
            </summary>
            <param name="position">位置</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.SetKeyword(System.String)">
            <summary>
            设置待匹配的关键字到列表
            </summary>
            <param name="keyword">关键字</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.AddChar(System.Char)">
            <summary>
            增加字符
            </summary>
            <param name="c">字符</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.HasChild(System.Char)">
            <summary>
            判断是否有子节点
            </summary>
            <param name="c">字符</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.GetChild(System.Char)">
            <summary>
            获取子节点
            </summary>
            <param name="c">字符</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.MatchFailOver(FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode)">
            <summary>
            找到失效点
            </summary>
            <param name="rootNode">根</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.SetFailover(System.Int32,FangLab.Framework.Text.KeywordMatch.SlFailOverNode)">
            <summary>
            设置失效点
            </summary>
            <param name="offset">偏移量</param>
            <param name="failOverNode">失效点</param>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.CurrentChar">
            <summary>
            当前字符
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.MatchKeywords">
            <summary>
            匹配关键字
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.Failovers">
            <summary>
            失效点
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.Parent">
            <summary>
            父节点
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.Children">
            <summary>
            子节点
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.CurrentPosition">
            <summary>
            当前位置
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.CurrentFailover">
            <summary>
            当前失效点
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.CurrentKeyword">
            <summary>
            当前的关键字
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode.ParentFailover">
            <summary>
            父级失效点
            </summary>
        </member>
        <member name="T:FangLab.Framework.Text.KeywordMatch.SlCompressionMatchNode">
            <summary>
            压缩匹配节点
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlCompressionMatchNode.#ctor(System.Char)">
            <summary>
            构造函数
            </summary>
            <param name="c">字符</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlCompressionMatchNode.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{FangLab.Framework.Text.KeywordMatch.SlFailOverNode})">
            <summary>
            构造函数
            </summary>
            <param name="content">内容</param>
            <param name="matchedKeywords">匹配关键字</param>
            <param name="failoverNodes">失效点</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlCompressionMatchNode.AddChar(System.Char)">
            <summary>
            增加字符
            </summary>
            <param name="c">字符</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlCompressionMatchNode.ToString">
            <summary>
            重构ToString
            </summary>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlCompressionMatchNode.MatchFailOver(FangLab.Framework.Text.KeywordMatch.SlAbstractMatchNode)">
            <summary>
            找到失效点
            </summary>
            <param name="root">根</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlCompressionMatchNode.HasChild(System.Char)">
            <summary>
            判断是否有子节点
            </summary>
            <param name="c">字符</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlCompressionMatchNode.GetChild(System.Char)">
            <summary>
            获取子节点
            </summary>
            <param name="c">字符</param>
            <returns>结果</returns>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlCompressionMatchNode.ParentFailover">
            <summary>
            父级失效点
            </summary>
        </member>
        <member name="T:FangLab.Framework.Text.KeywordMatch.SlFailOverNode">
            <summary>
            失效点
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlFailOverNode.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlFailOverNode.Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="T:FangLab.Framework.Text.KeywordMatch.SlKeywordMatchManager">
            <summary>
            关键字匹配管理器
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlKeywordMatchManager.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            构造函数
            </summary>
            <param name="keywords">关键字列表</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlKeywordMatchManager.MatchKeywords(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            查找关键字
            </summary>
            <param name="keywords">关键字列表</param>
        </member>
        <member name="M:FangLab.Framework.Text.KeywordMatch.SlKeywordMatchManager.Match(System.String)">
            <summary>
            匹配
            </summary>
            <param name="content">内容</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Text.KeywordMatch.SlMatchResult">
            <summary>
            匹配结果
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlMatchResult.StartIndex">
            <summary>
            开始索引
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlMatchResult.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="P:FangLab.Framework.Text.KeywordMatch.SlMatchResult.Keyword">
            <summary>
            关键字
            </summary>
        </member>
        <member name="T:FangLab.Framework.Text.SlBase64">
            <summary>
            SlBase64处理
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.SlBase64.ToBase64Byte(System.Byte[])">
            <summary>
            转换为Base64
            </summary>
            <param name="datas">数据</param>
            <returns>转换的结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlBase64.ToBase64Byte(System.Byte[],System.Text.Encoding)">
            <summary>
            转换为Base64
            </summary>
            <param name="datas">数据</param>
            <param name="encoding">编码</param>
            <returns>转换的结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlBase64.ToBase64String(System.Byte[])">
            <summary>
            转换为Base64
            </summary>
            <param name="datas">数据</param>
            <returns>转换的结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlBase64.ToBase64String(System.String,System.Text.Encoding)">
            <summary>
            转换为Base64
            </summary>
            <param name="input">待转换的字符串</param>
            <param name="encoding">编码方式</param>
            <returns>转换的结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlBase64.FromBase64Byte(System.Byte[])">
            <summary>
            由Base64数据转换为原形式
            </summary>
            <param name="Base64Data">Base64数据</param>
            <returns>原形式</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlBase64.FromBase64Byte(System.Byte[],System.Text.Encoding)">
            <summary>
            由Base64数据转换为原形式
            </summary>
            <param name="Base64Data">Base64数据</param>
            <param name="encoding">编码方式</param>
            <returns>原形式</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlBase64.FromBase64String(System.Byte[])">
            <summary>
            由Base64数据转换为原形式
            </summary>
            <param name="Base64Data">Base64数据</param>
            <returns>原形式</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlBase64.FromBase64String(System.Byte[],System.Text.Encoding)">
            <summary>
            由Base64数据转换为原形式
            </summary>
            <param name="Base64Data">Base64数据</param>
            <param name="encoding">编码方式</param>
            <returns>原形式</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlBase64.FromBase64String(System.String,System.Text.Encoding)">
            <summary>
            转换回原形式
            </summary>
            <param name="input">待转换的字符串</param>
            <param name="encoding">编码方式</param>
            <returns>原形式</returns>
        </member>
        <member name="T:FangLab.Framework.Text.SlEncoding">
            <summary>
            编码
            </summary>
        </member>
        <member name="F:FangLab.Framework.Text.SlEncoding.Default">
            <summary>
            默认编码
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.SlEncoding.ConvertIso8859ToGB2312(System.String)">
            <summary>
            转换Iso8859为GB2312
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlEncoding.ConvertGB2312ToIso8859(System.String)">
            <summary>
            转换GB2312为Iso8859
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlEncoding.ConvertUtf8WithOutBom(System.String)">
            <summary>
            转换为无Bom的Utf8编码
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Text.SlHex">
            <summary>
            十六进制处理
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.SlHex.ToHex(System.Byte[])">
            <summary>
            转换为十六进制
            </summary>
            <param name="datas">数据</param>
            <returns>转换的结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlHex.ToHex(System.String,System.Text.Encoding)">
            <summary>
            转换为十六进制
            </summary>
            <param name="input">待转换的字符串</param>
            <param name="encoding">编码方式</param>
            <returns>转换的结果</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlHex.FromHex(System.Byte[])">
            <summary>
            由十六进制数据转换为原形式
            </summary>
            <param name="hexData">十六进制数据</param>
            <returns>原形式</returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlHex.FromHex(System.String,System.Text.Encoding)">
            <summary>
            转换回原形式
            </summary>
            <param name="input">待转换的字符串</param>
            <param name="encoding">编码方式</param>
            <returns>原形式</returns>
        </member>
        <member name="T:FangLab.Framework.Text.SlNumber32">
            <summary>
            整数与32进制间的转换
            </summary>
        </member>
        <member name="F:FangLab.Framework.Text.SlNumber32.zipMapWords">
            <summary>
            0-31 对应32个字符
            </summary>
        </member>
        <member name="F:FangLab.Framework.Text.SlNumber32.dictNumberTo32">
            <summary>
            整数与32进制 对照字典
            </summary>
        </member>
        <member name="F:FangLab.Framework.Text.SlNumber32.dict32ToNumber">
            <summary>
            32进制与整数 对照字典
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.SlNumber32.#cctor">
            <summary>
            初始化字典
            </summary>
        </member>
        <member name="M:FangLab.Framework.Text.SlNumber32.ConvertTo32(System.Int64)">
            <summary>
            整数转为32进制
            </summary>
            <param name="theNumber">要转换的整数</param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlNumber32.ConvertToNumber(System.String)">
            <summary>
            32进制转为整数
            </summary>
            <param name="the32Data">32进制</param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Text.SlNumber32.chang(System.Int64)">
            <summary>
            整数对应的32进制值
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.Filters.SlActionExecuteTimeAttribute">
            <summary>
            MVC的Action处理时间计算
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.Mvc.Filters.SlActionExecuteTimeAttribute.LogPath">
            <summary>
            日志路径
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.Mvc.Filters.SlActionExecuteTimeAttribute.Timeout">
            <summary>
            超时毫秒数
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.Filters.SlActionExecuteTimeAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Action执行前
            </summary>
            <param name="filterContext">上下文</param>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.Filters.SlActionExecuteTimeAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>
            Action执行后
            </summary>
            <param name="filterContext">上下文</param>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.Filters.SlCacheAttribute">
            <summary>
            缓存Action执行结果
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.Mvc.Filters.SlCacheAttribute.Duration">
            <summary>
            缓存时间（秒）
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.Filters.SlCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Action执行前
            </summary>
            <param name="filterContext">上下文</param>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.Filters.SlCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>
            Action执行后
            </summary>
            <param name="filterContext">上下文</param>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlCsvFileResult">
            <summary>
            Csv文件结果
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlCsvFileResult.#ctor(System.Collections.Generic.List{System.Object},System.String)">
            <summary>
            构造函数
            </summary>
            <param name="rows">数据</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlCsvFileResult.#ctor(System.Data.DataTable,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="rows">数据</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlHandleErrorAttribute">
            <summary>
            错误处理
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlHandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>
            重写OnException
            </summary>
            <param name="filterContext">上下文</param>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlJsonErrorResult">
            <summary>
            Json错误结果
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlJsonResult">
            <summary>
            Json结果
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlJsonResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlJsonErrorResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlJsonSuccessResult">
            <summary>
            Json成功结果
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlJsonSuccessResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlTextErrorResult">
            <summary>
            Text错误结果
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlTextResult">
            <summary>
            Text结果
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlTextResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlTextErrorResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlTextSuccessResult">
            <summary>
            Text成功结果
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlTextSuccessResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlXmlErrorResult">
            <summary>
            Xml错误结果
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlXmlResult">
            <summary>
            Xml结果
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlXmlResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlXmlErrorResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.Mvc.SlXmlSuccessResult">
            <summary>
            Xml成功结果
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.Mvc.SlXmlSuccessResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.SlAntiXss">
            <summary>
            防止XSS注入的工具类
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.CssEncode(System.String)">
            <summary>
            Provides encoding and decoding logic
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.HtmlAttributeEncode(System.String)">
            <summary>
            html字符串Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.HtmlEncode(System.String)">
            <summary>
            html字符串Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.HtmlEncode(System.String,System.Boolean)">
            <summary>
            html字符串Encode编码
            </summary>
            <param name="input"></param>
            <param name="useNamedEntities"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.HtmlFormUrlEncode(System.String)">
            <summary>
            html字符串Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.HtmlFormUrlEncode(System.String,System.Text.Encoding)">
            <summary>
            html字符串Encode编码
            </summary>
            <param name="input"></param>
            <param name="inputEncoding">code</param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.HtmlFormUrlEncode(System.String,System.Int32)">
            <summary>
            html字符串Encode编码
            </summary>
            <param name="input"></param>
            <param name="codePage"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.JavaScriptEncode(System.String)">
            <summary>
            JavaScript字符串Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.JavaScriptEncode(System.String,System.Boolean)">
            <summary>
            html字符串Encode编码
            </summary>
            <param name="input"></param>
            <param name="emitQuotes"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.LdapDistinguishedNameEncode(System.String)">
            <summary>
            字符串Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.LdapDistinguishedNameEncode(System.String,System.Boolean,System.Boolean)">
            <summary>
            字符串Encode编码
            </summary>
            <param name="input"></param>
            <param name="useInitialCharacterRules"></param>
            <param name="useFinalCharacterRule"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.LdapFilterEncode(System.String)">
            <summary>
            字符串Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.UrlEncode(System.String)">
            <summary>
            Url Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.UrlEncode(System.String,System.Text.Encoding)">
            <summary>
             Url Encode编码
            </summary>
            <param name="input"></param>
            <param name="inputEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.UrlEncode(System.String,System.Int32)">
            <summary>
             Url Encode编码
            </summary>
            <param name="input"></param>
            <param name="codePage"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.UrlPathEncode(System.String)">
            <summary>
             Url Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.VisualBasicScriptEncode(System.String)">
            <summary>
             VisualBasicScript Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.XmlAttributeEncode(System.String)">
            <summary>
            Xml Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.XmlEncode(System.String)">
            <summary>
            Xml Encode编码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.GetSafeHtml(System.String)">
            <summary>
            非法字符串过滤
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.GetSafeHtmlFragment(System.String)">
            <summary>
            获取安全的html片段
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlAntiXss.GetSafeText(System.String)">
            <summary>
            获取过滤后的文本
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:FangLab.Framework.Web.SlHttpActionType">
            <summary>
            Http请求方式
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.SlHttpActionType.Get">
            <summary>
            Get传参
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.SlHttpActionType.Post">
            <summary>
            Post传参
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.SlHttpContext">
            <summary>
            Http上下文
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.SlHttpContext.StartupTime">
            <summary>
            启动时间
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.SlHttpContext.BinDirectory">
            <summary>
            Bin目录（有斜线结尾）
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.SlHttpContext.Directory">
            <summary>
            项目所在目录（有斜线结尾）
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.SlJson">
            <summary>
            Json格式数据处理
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.SlJson.serializer">
            <summary>
            序列化器
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.SlJson.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.SlJson.ToJson(System.Object)">
            <summary>
            将对象序列化为Json格式的字符串
            </summary>
            <param name="source">源类型对象</param>
            <returns>Json格式的字符串</returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlJson.FromJson``1(System.String)">
            <summary>
            将Json格式的数据转换为对象
            </summary>
            <typeparam name="T">源类型</typeparam>
            <param name="json">json格式的字符串</param>
            <returns>序列化之后的格式</returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlJson.JsonEquals(System.Object,System.Object)">
            <summary>
            判断是否相等
            </summary>
            <param name="a">a</param>
            <param name="b">b</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Web.SlJson.GetSafeJson(System.String)">
            <summary>
            获得安全字符串
            </summary>
            <param name="input">输入</param>
            <returns>结果</returns>
        </member>
        <member name="T:FangLab.Framework.Web.SlMimeType">
            <summary>
            MIME类型
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.SlMimeType.Xml">
            <summary>
            Xml
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.SlMimeType.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.SlMimeType.Json">
            <summary>
            Json
            </summary>
        </member>
        <member name="F:FangLab.Framework.Web.SlMimeType.Csv">
            <summary>
            Csv
            </summary>
        </member>
        <member name="T:FangLab.Framework.Web.SlRequest">
            <summary>
            请求
            </summary>
        </member>
        <member name="M:FangLab.Framework.Web.SlRequest.GetHtml(System.String,System.Text.Encoding,System.Int32,FangLab.Framework.Web.SlHttpActionType,System.String)">
            <summary>
            获取url里面的html
            </summary>
            <param name="url"></param>
            <param name="encoding"></param>
            <param name="timeout"></param>
            <param name="httpActionType"></param>
            <param name="postParameter"></param>
            <returns></returns>
        </member>
        <member name="P:FangLab.Framework.Web.SlRequest.UserHostAddress">
            <summary>
            用户IP
            </summary>
        </member>
        <member name="P:FangLab.Framework.Web.SlRequest.UserHostPort">
            <summary>
            获取主机端口
            </summary>
        </member>
        <member name="T:FangLab.Framework.Xml.SlXmlDocument">
            <summary>
            Xml文档
            </summary>
        </member>
        <member name="M:FangLab.Framework.Xml.SlXmlDocument.Select(System.String,System.String)">
            <summary>
            查找结点
            </summary>
            <param name="xml">文档</param>
            <param name="path">路径</param>
            <returns>结果</returns>
        </member>
        <member name="M:FangLab.Framework.Xml.SlXmlDocument.GetValue(System.Xml.Linq.XDocument,System.String)">
            <summary>
            查找结点的值
            </summary>
            <param name="doc">xml文档</param>
            <param name="node">节点名称</param>
            <returns>节点值</returns>
        </member>
        <member name="M:FangLab.Framework.Xml.SlXmlDocument.GetValue(System.Xml.Linq.XElement,System.String)">
            <summary>
            查找结点的值
            </summary>
            <param name="element">xml文档</param>
            <param name="node">节点名称</param>
            <returns>节点值</returns>
        </member>
    </members>
</doc>
